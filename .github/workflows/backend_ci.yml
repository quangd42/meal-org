on:
  pull_request:
    branches: [main, ft/security]

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    # Service containers to run with `tests`
    # Mainly for integration tests
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Maps tcp port 5432 on service container to the host
        ports:
          - 5432:5432
        # Provide the password for postgres
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd="pg_isready -U testuser"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      GO111MODULE: on
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      # Unit tests
      # - name: Run Tests
      #   run: go test ./... -cover

      - name: Install Goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      # Run integration tests
      - name: Build app
        run: ./scripts/build_prod.sh

      - name: Run the application
        run: ./bin/planner_server &
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          DATABASE_URL: postgres://testuser:testpassword@localhost:5432/testdb
          JWT_SECRET: xoEuGejzRwfkgr26Qq3oLZh6vFwaJbGvC2xzlJj8R3+w9WmV9kTiT1rKDyov89lf+OreU3kCTEbict7dsSNKAA==
          PORT: 8080

      - name: Run db migration
        run: ./scripts/migrate_up.sh
        env:
          DATABASE_URL: postgres://testuser:testpassword@localhost:5432/testdb

      - name: Run Integration Tests
        run: |
          curl --location --remote-name https://github.com/Orange-OpenSource/hurl/releases/download/4.3.0/hurl_4.3.0_amd64.deb
          sudo dpkg -i hurl_4.3.0_amd64.deb
          hurl --test --variables-file integration-tests/vars.env --glob "integration-tests/**/*.hurl"

  security:
    name: Golang Security
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    env:
      GO111MODULE: on
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: -exclude-generated ./...

  style:
    name: Style
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run formatter
        run: test -z $(go fmt backend/...)

      - name: Run staticcheck
        run: staticcheck backend/...
