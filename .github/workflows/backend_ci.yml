name: ci

on:
  pull_request:
    branches: [main]

env:
  POSTGRES_DB: testdb
  POSTGRES_USER: testuser
  POSTGRES_PASSWORD: testpassword
  DATABASE_URL: postgres://testuser:testpassword@localhost:5432/testdb
  JWT_SECRET: xoEuGejzRwfkgr26Qq3oLZh6vFwaJbGvC2xzlJj8R3+w9WmV9kTiT1rKDyov89lf+OreU3kCTEbict7dsSNKAA==
  PORT: 8080

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd="pg_isready -U ${{ env.POSTGRES_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Install Goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Build app
        run: ./scripts/build_prod.sh

      - name: Run the application
        run: ./bin/planner_server &

      - name: Run db migration
        run: ./scripts/migrate_up.sh

      - name: Build go script to prepopulate the database
        run: go build -o scripts/populate_cuisines/bin/populate_cuisines scripts/populate_cuisines/populate_cuisines.go

      - name: Populate the database with cuisines
        run: ./scripts/populate_cuisines/bin/populate_cuisines

      - name: Run Integration Tests
        run: |
          curl --location --remote-name https://github.com/Orange-OpenSource/hurl/releases/download/4.3.0/hurl_4.3.0_amd64.deb
          sudo dpkg -i hurl_4.3.0_amd64.deb
          hurl --test --variables-file integration-tests/vars.env --glob "integration-tests/**/*.hurl"

  style:
    name: Style
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run formatter
        run: test -z $(go fmt ./...)

      - name: Run staticcheck
        run: staticcheck ./...
